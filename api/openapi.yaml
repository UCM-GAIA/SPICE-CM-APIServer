openapi: 3.0.0
info:
  title: Community Model API
  description: API for Community model algorithms
  contact:
    email: gjimenez@ucm.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1.0
servers:
- url: https://virtserver.swaggerhub.com/gjimenezUCM/SPICE-CommunityModelAPI/v1.0
  description: SwaggerHub API Auto Mocking
tags:
- name: communities
  description: Operations related to information about communities
- name: users
  description: Operations related to users in communities
- name: similarity
  description: Operations about computing similarity among communities
paths:
  /communities:
    get:
      tags:
      - communities
      summary: Communities in the model
      description: Access to a list of the communities in the community model
      operationId: getCommunities
      responses:
        "200":
          description: A list with the communities in the model
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/community'
                x-content-type: application/json
        "400":
          description: Community model does not exist
      x-swagger-router-controller: Communities
  /communities/{community-id}:
    get:
      tags:
      - communities
      summary: community description and explanation
      description: Returns information about a community
      operationId: getCommunityById
      parameters:
      - name: community-id
        in: path
        description: ID of community to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/community'
                x-content-type: application/json
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /communities/{community-id}/users:
    get:
      tags:
      - communities
      summary: Users who belong to a community
      description: Returns a list with the ids of the users who belong to a community
      operationId: listCommunityUsers
      parameters:
      - name: community-id
        in: path
        description: ID of community to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
                x-content-type: application/json
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /users/{user-id}/communities:
    get:
      tags:
      - users
      summary: Communities that a user belongs
      description: Returns a list with the ids of the communities that the user belongs
        to
      operationId: listUserCommunities
      parameters:
      - name: user-id
        in: path
        description: ID of user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
                x-content-type: application/json
        "400":
          description: invalid user id
      x-swagger-router-controller: Users
  /users/{user-id}/generated-content:
    put:
      tags:
      - users
      summary: Add user generated content
      description: Stores a new content generated by a user
      operationId: addContribution
      parameters:
      - name: user-id
        in: path
        description: ID of user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: User generated content object that will be added to the model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generated-content'
        required: true
      responses:
        "204":
          description: User generated content successfully added
        "400":
          description: invalid user id
      x-swagger-router-controller: Users
  /communities/{community-id}/similarity:
    get:
      tags:
      - similarity
      summary: K-most similar communities
      description: Returns a list with the k most similar communities to the chosen
        one in the model.
      operationId: computeKmostSimilar
      parameters:
      - name: community-id
        in: path
        description: ID of the target community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: k
        in: query
        description: Size of the result (k most similar communities)
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: A list with the similarity scores between communities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid communityId or query parameters
      x-swagger-router-controller: Similarity
  /communities/{community-id}/similarity/{other-community-id}:
    get:
      tags:
      - similarity
      summary: Similarity between two communities
      description: Returns a similarity score between two communities.
      operationId: computeSimilarity
      parameters:
      - name: community-id
        in: path
        description: ID of the target community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: other-community-id
        in: path
        description: ID of the other community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A list with one similarity score object between targetCommunity
            and otherCommunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid communityIds (target or other)
      x-swagger-router-controller: Similarity
  /communities/{community-id}/dissimilarity:
    get:
      tags:
      - similarity
      summary: K-most dissimilar communities
      description: Returns a list with the k most dissimilar communities to the chosen
        one in the model.
      operationId: computeKmostDissimilar
      parameters:
      - name: community-id
        in: path
        description: ID of the target community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: k
        in: query
        description: Size of the result (k most dissimilar communities)
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: A list with the similarity scores between communities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid community-id or query parameters
      x-swagger-router-controller: Similarity
  /communities/{community-id}/dissimilarity/{other-community-id}:
    get:
      tags:
      - similarity
      summary: Dissimilarity between two communities
      description: Returns the dissimilarity score between two communities
      operationId: computeDissimilarity
      parameters:
      - name: community-id
        in: path
        description: ID of the target community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: other-community-id
        in: path
        description: ID of the other community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A list with one similarity score object between targetCommunity
            and otherCommunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid communityIds (target or other)
      x-swagger-router-controller: Similarity
components:
  schemas:
    id:
      type: string
      description: Unique id
      format: uri
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    generated-content:
      required:
      - generated-content-id
      - parent-item-id
      - user-id
      type: object
      properties:
        user-id:
          type: string
          description: Url to the user model information stored on Linked Data Hub
          format: uri
        parent-item-id:
          type: string
          description: "Url to the item (artwork, museum concept...) stored on Linked\
            \ Data Hub"
          format: uri
        generated-content-id:
          type: string
          description: "Url to complete information stored about the contribution\
            \ (such as timestamp, context, textual contribution, multimedia...)"
          format: url
          example: https://...
        values:
          type: array
          description: A list with the values extracted from the user interaction
            and employed by the community model for the community detection algorithms
          items:
            type: string
            description: uri to a formal concept in SPICE ontologies
            format: uri
            example: "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
      example:
        generated-content-id: https://...
        user-id: http://example.com/aeiou
        values:
        - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
        - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
        parent-item-id: http://example.com/aeiou
    community:
      required:
      - community-type
      - id
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          type: string
          description: Community name
          example: elderly
        explanation:
          type: string
          description: community description (maybe empty). It can be computed by
            the explanation module
          example: People whose age is above 65
        community-type:
          type: string
          description: Type of community. Implicit communities are computed by the
            community model. Explicit communities are provided by the user model
          example: explicit
          enum:
          - explicit
          - implicit
        users:
          type: array
          description: A list with the users who belong to the community
          items:
            $ref: '#/components/schemas/id'
        contributions:
          type: array
          description: A list with the specific user generated content employed to
            create this community
          items:
            $ref: '#/components/schemas/generated-content'
      example:
        contributions:
        - generated-content-id: https://...
          user-id: http://example.com/aeiou
          values:
          - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
          - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
          parent-item-id: http://example.com/aeiou
        - generated-content-id: https://...
          user-id: http://example.com/aeiou
          values:
          - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
          - "[\"https://w3id.org/spice/SON/PlutchikEmotion/Amazement\"]"
          parent-item-id: http://example.com/aeiou
        community-type: explicit
        name: elderly
        id: d290f1ee-6c54-4b01-90e6-d701748f0851
        explanation: People whose age is above 65
        users:
        - '191'
        - '25'
    similarityScore:
      type: array
      description: Schema for results that compute similarity values
      items:
        $ref: '#/components/schemas/similarityScore_inner'
    similarityScore_inner:
      type: object
      properties:
        target-community-id:
          $ref: '#/components/schemas/id'
        other-community-id:
          $ref: '#/components/schemas/id'
        value:
          type: number
          description: Similarity value between the communities in the similarity
            score object
        similarity-function:
          type: string
          description: similarity function employed to compute this similarity score
      example:
        target-community-id: d290f1ee-6c54-4b01-90e6-d701748f0851
        other-community-id: d290f1ee-6c54-4b01-90e6-d701748f0851
        similarity-function: similarity-function
        value: 0.80082819046101150206595775671303272247314453125
